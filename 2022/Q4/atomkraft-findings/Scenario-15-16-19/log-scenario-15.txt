INFO     root:mp_gamm.py:118 [Step]: init
INFO     root:mp_gamm.py:126 	[Status]: Testnet launched...

INFO     root:mp_gamm.py:157 [Step]: create pool
INFO     root:mp_gamm.py:186 {'tag': 'CreatePool', 'value': {'amounts': {'uatom': 2, 'ujuno': 8}, 'sender': 'A', 'weights': {'uatom': 1, 'ujuno': 1}}}
INFO     root:mp_gamm.py:187 {'tag': 'CreatePool', 'value': {'id': 1}}
INFO     root:mp_gamm.py:105 	[Tx CMD]: osmosis/build/osmosisd tx gamm create-pool --pool-file /tmp/pytest-of-mirel/pytest-4/test_scenarios_scenario150/osmosisd/pool-files/pool-file-config.json --from A --broadcast-mode block --gas 500000 -y --keyring-backend test --home /tmp/pytest-of-mirel/pytest-4/test_scenarios_scenario150/osmosisd --chain-id osmosis --node tcp://127.0.0.1:26657 --output json 
INFO     root:mp_gamm.py:101 	[Pool status]: {'@type': '/osmosis.gamm.v1beta1.Pool', 'address': 'osmo1mw0ac6rwlp5r8wapwk3zs6g29h8fcscxqakdzw9emkne6c8wjp9q0t3v8t', 'id': '1', 'pool_params': {'swap_fee': '0.000000000000000000', 'exit_fee': '0.000000000000000000', 'smooth_weight_change_params': None}, 'future_pool_governor': '', 'total_shares': {'denom': 'gamm/pool/1', 'amount': '100000000000000000000'}, 'pool_assets': [{'token': {'denom': 'uatom', 'amount': '2'}, 'weight': '1073741824'}, {'token': {'denom': 'ujuno', 'amount': '8'}, 'weight': '1073741824'}], 'total_weight': '2147483648'}
INFO     root:mp_gamm.py:228 {'amounts': {'uatom': 2, 'ujuno': 8}, 'exit_fee': 0, 'id': 1, 'share': 100000000000000000000, 'swap_fee': 0, 'weights': {'uatom': 1, 'ujuno': 1}}
INFO     root:mp_gamm.py:437 [Step]: swap out amount
INFO     root:mp_gamm.py:440 Old balance of C: [{'denom': 'uatom', 'amount': '8'}, {'denom': 'ujuno', 'amount': '8'}, {'denom': 'uosmo', 'amount': '8'}]
INFO     root:mp_gamm.py:445 {'tag': 'SwapOutAmount', 'value': {'amount_out': 4, 'denom_in': 'uatom', 'denom_out': 'ujuno', 'id': 1, 'sender': 'C'}}
INFO     root:mp_gamm.py:446 {'tag': 'UpdatePool', 'value': {'deltas': {'uatom': 2, 'ujuno': -4}}}
INFO     root:mp_gamm.py:105 	[Tx CMD]: osmosis/build/osmosisd tx gamm swap-exact-amount-out 4ujuno 2 --swap-route-pool-ids 1 --swap-route-denoms uatom --from C --broadcast-mode block --gas 500000 -y --keyring-backend test --home /tmp/pytest-of-mirel/pytest-4/test_scenarios_scenario150/osmosisd --chain-id osmosis --node tcp://127.0.0.1:26657 --output json 
ERROR    root:mp_gamm.py:497 	(Code 111222) recovered: base must be lesser than two
stack:
goroutine 308 [running]:
runtime/debug.Stack()
	runtime/debug/stack.go:24 +0x65
github.com/cosmos/cosmos-sdk/baseapp.newDefaultRecoveryMiddleware.func1({0x1c8ea60, 0xc005625460})
	github.com/cosmos/cosmos-sdk@v0.46.1/baseapp/recovery.go:71 +0x27
github.com/cosmos/cosmos-sdk/baseapp.newRecoveryMiddleware.func1({0x1c8ea60?, 0xc005625460?})
	github.com/cosmos/cosmos-sdk@v0.46.1/baseapp/recovery.go:39 +0x30
github.com/cosmos/cosmos-sdk/baseapp.processRecovery({0x1c8ea60, 0xc005625460}, 0xc005904000?)
	github.com/cosmos/cosmos-sdk@v0.46.1/baseapp/recovery.go:28 +0x37
github.com/cosmos/cosmos-sdk/baseapp.processRecovery({0x1c8ea60, 0xc005625460}, 0x25ceee0?)
	github.com/cosmos/cosmos-sdk@v0.46.1/baseapp/recovery.go:33 +0x5e
github.com/cosmos/cosmos-sdk/baseapp.(*BaseApp).runTx.func1()
	github.com/cosmos/cosmos-sdk@v0.46.1/baseapp/baseapp.go:610 +0xf0
panic({0x1c8ea60, 0xc005625460})
	runtime/panic.go:884 +0x212
github.com/osmosis-labs/osmosis/v12/osmomath.Pow({0xc00567b880?}, {0x232dcd0?})
	github.com/osmosis-labs/osmosis/v12/osmomath/math.go:64 +0x13e
github.com/osmosis-labs/osmosis/v12/x/gamm/pool-models/balancer.solveConstantFunctionInvariant({0xc005656a40?}, {0x0?}, {0x1?}, {0xc00567b700?}, {0xc00567b720?})
	github.com/osmosis-labs/osmosis/v12/x/gamm/pool-models/balancer/amm.go:108 +0x6f
github.com/osmosis-labs/osmosis/v12/x/gamm/pool-models/balancer.Pool.CalcInAmtGivenOut({{0xc005656a40, 0x3f}, 0x1, {{0xc00567b700}, {0xc00567b720}, 0x0}, {0x0, 0x0}, {{0xc00566c2e0, 0xb}, ...}, ...}, ...)
	github.com/osmosis-labs/osmosis/v12/x/gamm/pool-models/balancer/pool.go:554 +0x16d
github.com/osmosis-labs/osmosis/v12/x/gamm/keeper.Keeper.createMultihopExpectedSwapOuts({{0x25a4fb0, 0xc0010696e0}, {0x25ccd40, 0xc000fcf1c0}, {{0x25ccd40, 0xc000fcf1c0}, 0xc0001a2140, {0x25a4fb0, 0xc001069640}, {0x25a5000, ...}, ...}, ...}, ...)
	github.com/osmosis-labs/osmosis/v12/x/gamm/keeper/multihop.go:131 +0x2d1
github.com/osmosis-labs/osmosis/v12/x/gamm/keeper.Keeper.MultihopSwapExactAmountOut({{0x25a4fb0, 0xc0010696e0}, {0x25ccd40, 0xc000fcf1c0}, {{0x25ccd40, 0xc000fcf1c0}, 0xc0001a2140, {0x25a4fb0, 0xc001069640}, {0x25a5000, ...}, ...}, ...}, ...)
	github.com/osmosis-labs/osmosis/v12/x/gamm/keeper/multihop.go:68 +0x445
github.com/osmosis-labs/osmosis/v12/x/gamm/keeper.msgServer.SwapExactAmountOut({0x413445?}, {0x25bce90?, 0xc00567e960?}, 0xc004ab7cc0)
	github.com/osmosis-labs/osmosis/v12/x/gamm/keeper/msg_server.go:193 +0x219
github.com/osmosis-labs/osmosis/v12/x/gamm/types._Msg_SwapExactAmountOut_Handler.func1({0x25bce90, 0xc00567e960}, {0x1efeac0?, 0xc004ab7cc0})
	github.com/osmosis-labs/osmosis/v12/x/gamm/types/tx.pb.go:1260 +0x78
github.com/cosmos/cosmos-sdk/baseapp.(*MsgServiceRouter).RegisterService.func2.1({0x25bce90, 0xc00567e930}, {0x4c3666?, 0x412e8b?}, 0x1f3ee60?, 0xc005631fe0)
	github.com/cosmos/cosmos-sdk@v0.46.1/baseapp/msg_service_router.go:113 +0xd2
github.com/osmosis-labs/osmosis/v12/x/gamm/types._Msg_SwapExactAmountOut_Handler({0x1e2fee0?, 0xc0001a2600}, {0x25bce90, 0xc00567e930}, 0x232dac0, 0xc00567b640)
	github.com/osmosis-labs/osmosis/v12/x/gamm/types/tx.pb.go:1262 +0x138
github.com/cosmos/cosmos-sdk/baseapp.(*MsgServiceRouter).RegisterService.func2({{0x25bce90, 0xc00566f0b0}, {0x25ceee0, 0xc005649b00}, {{0xb, 0x0}, {0xc00528e8b9, 0x7}, 0xd, {0x200f7543, ...}, ...}, ...}, ...)
	github.com/cosmos/cosmos-sdk@v0.46.1/baseapp/msg_service_router.go:117 +0x2f3
github.com/cosmos/cosmos-sdk/baseapp.(*BaseApp).runMsgs(_, {{0x25bce90, 0xc00566f0b0}, {0x25ceee0, 0xc005649b00}, {{0xb, 0x0}, {0xc00528e8b9, 0x7}, 0xd, ...}, ...}, ...)
	github.com/cosmos/cosmos-sdk@v0.46.1/baseapp/baseapp.go:738 +0x5a5
github.com/cosmos/cosmos-sdk/baseapp.(*BaseApp).runTx(0xc000fd0180, 0x3, {0xc004d1d440, 0x114, 0x114})
	github.com/cosmos/cosmos-sdk@v0.46.1/baseapp/baseapp.go:695 +0xbc5
github.com/cosmos/cosmos-sdk/baseapp.(*BaseApp).DeliverTx(0xc000fd0180, {{0xc004d1d440?, 0x20?, 0xc0052f2780?}})
	github.com/cosmos/cosmos-sdk@v0.46.1/baseapp/abci.go:306 +0x193
github.com/tendermint/tendermint/abci/client.(*localClient).DeliverTxAsync(0xc000feeba0, {{0xc004d1d440?, 0x0?, 0xc000feeba0?}})
	github.com/tendermint/tendermint@v0.34.21/abci/client/local_client.go:93 +0x105
github.com/tendermint/tendermint/proxy.(*appConnConsensus).DeliverTxAsync(0xc00562f8c0?, {{0xc004d1d440?, 0x20?, 0xb?}})
	github.com/tendermint/tendermint@v0.34.21/proxy/app_conn.go:85 +0x26
github.com/tendermint/tendermint/state.execBlockOnProxyApp({0x25be160?, 0xc000f2e180}, {0x25c5c40, 0xc0010beb00}, 0xc000ec6d20, {0x25ce368, 0xc000012540}, 0xc?)
	github.com/tendermint/tendermint@v0.34.21/state/execution.go:320 +0x847
github.com/tendermint/tendermint/state.(*BlockExecutor).ApplyBlock(_, {{{0xb, 0x0}, {0xc000f0fda0, 0x7}}, {0xc000f0fda7, 0x7}, 0x1, 0xc, {{0xc005593d60, ...}, ...}, ...}, ...)
	github.com/tendermint/tendermint@v0.34.21/state/execution.go:140 +0x171
github.com/tendermint/tendermint/consensus.(*State).finalizeCommit(0xc001044380, 0xd)
	github.com/tendermint/tendermint@v0.34.21/consensus/state.go:1659 +0xafd
github.com/tendermint/tendermint/consensus.(*State).tryFinalizeCommit(0xc001044380, 0xd)
	github.com/tendermint/tendermint@v0.34.21/consensus/state.go:1568 +0x2ff
github.com/tendermint/tendermint/consensus.(*State).enterCommit.func1()
	github.com/tendermint/tendermint@v0.34.21/consensus/state.go:1503 +0x94
github.com/tendermint/tendermint/consensus.(*State).enterCommit(0xc001044380, 0xd, 0x0)
	github.com/tendermint/tendermint@v0.34.21/consensus/state.go:1541 +0xccf
github.com/tendermint/tendermint/consensus.(*State).addVote(0xc001044380, 0xc005620960, {0xc000d1e1e0, 0x28})
	github.com/tendermint/tendermint@v0.34.21/consensus/state.go:2155 +0x18dc
github.com/tendermint/tendermint/consensus.(*State).tryAddVote(0xc001044380, 0xc005620960, {0xc000d1e1e0?, 0xc0032cd900?})
	github.com/tendermint/tendermint@v0.34.21/consensus/state.go:1953 +0x2c
github.com/tendermint/tendermint/consensus.(*State).handleMsg(0xc001044380, {{0x259fd40?, 0xc0041b1300?}, {0xc000d1e1e0?, 0x0?}})
	github.com/tendermint/tendermint@v0.34.21/consensus/state.go:856 +0x170
github.com/tendermint/tendermint/consensus.(*State).receiveRoutine(0xc001044380, 0x0)
	github.com/tendermint/tendermint@v0.34.21/consensus/state.go:763 +0x3f9
created by github.com/tendermint/tendermint/consensus.(*State).OnStart
	github.com/tendermint/tendermint@v0.34.21/consensus/state.go:379 +0x12d
: panic
INFO     root:test_scenarios_scenario15.py:10 Successfully executed trace traces/scenarios/scenario15.itf.json
